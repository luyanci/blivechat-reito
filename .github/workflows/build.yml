name: Build

on:
  push:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  frontend:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - id: set_tag
        run: |
          if ${{ startsWith(github.ref, 'refs/tags/v') }}; then
            echo "tag=${GITHUB_REF#refs/tags/v}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"
          fi
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: frontend
          path: frontend/dist

  backend:
    needs: frontend
    strategy:
      matrix:
        os: [windows-latest,ubuntu-latest,macos-latest,macos-13]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }}
          submodules: recursive

      - name: Download Frontend
        uses: actions/download-artifact@v4
        with:
          name: frontend
          path: frontend/dist

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.9

      - name: Install Dependencies
        run: pip3 install -r requirements.txt

      - name: Bundle blivechat (Unix)
        if: runner.os != 'windows'
        run: |
          pip3 install pyinstaller==5.13.2
          pyinstaller --noconfirm \
            --add-data="data:data" \
            --add-data="log:log" \
            --add-data="frontend/dist:frontend/dist" \
            --hidden-import aiohttp \
            --hidden-import PIL \
            --name blivechat \
            main.py
      - name: Bundle blivechat (Windows)
        if: runner.os == 'windows'
        run: |
          pip3 install pyinstaller==5.13.2
          pyinstaller --noconfirm `
            --add-data="data;data" `
            --add-data="log;log" `
            --add-data="frontend\dist;frontend\dist" `
            --hidden-import aiohttp `
            --hidden-import PIL `
            --name blivechat `
            main.py
      - name: Package Bundle
        working-directory: dist
        run: 7z a -tzip blivechat-orig-beardom-${{ runner.os }}-${{ runner.arch }}.zip blivechat


      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: blivechat-${{ matrix.os }}
          path: dist/blivechat-*.zip

  release:
    needs: backend
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: release
          body: 'bear: 基于只熊KUMA
                 orig: 基于原版'
          files: ./**/blivechat-*.zip